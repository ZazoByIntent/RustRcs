#include "Pattern.h"

std::vector<Vec2> getPattern(const std::string& name) {
	if (name == "AR")
	{
		std::vector<Vec2> pattern{ Vec2(1.390706, -2.003941), Vec2(1.176434, -3.844176), Vec2(3.387171, -5.516686), Vec2(5.087049, -7.017456), Vec2(5.094189, -8.342467), Vec2(4.426013, -9.487704), Vec2(3.250455, -10.44915), Vec2(1.73545, -11.22279), Vec2(0.04893398, -11.8046), Vec2(-1.641158, -12.19056), Vec2(-3.166891, -12.58713), Vec2(-4.360331, -13.32077), Vec2(-5.053545, -14.32128), Vec2(-5.090651, -15.51103), Vec2(-4.489915, -16.81242), Vec2(-3.382552, -18.14783) , Vec2(-1.899585, -19.43966), Vec2(-0.1720295, -20.61031) , Vec2(1.669086, -21.58213) , Vec2(3.492748, -22.27755) , Vec2(5.16793, -22.61893) , Vec2(6.563614, -22.81778) , Vec2(7.548776, -23.37389) , Vec2(7.992399, -24.21139) , Vec2(7.512226, -25.23734) , Vec2(6.063792, -26.35886) , Vec2(4.117367, -27.48302) , Vec2(2.143932, -28.51692), Vec2(0.6144824, -29.36766) };
		return pattern;
	}
	if (name == "LR")
	{
		std::vector<Vec2> pattern{ Vec2(0.09836517, -1.004928), Vec2(0.3469534, -2.248523), Vec2(0.7512205, -3.575346), Vec2(1.326888, -4.829963), Vec2(1.958069, -5.858609), Vec2(2.527623, -6.687347), Vec2(2.918412, -7.399671), Vec2(3.007762, -8.005643), Vec2(2.641919, -8.515327), Vec2(1.950645, -8.938788), Vec2(1.144313, -9.286088), Vec2(0.4332969, -9.567291), Vec2(0.02797037, -9.793953), Vec2(0.04550591, -9.992137), Vec2(0.2685102, -10.17017), Vec2(0.6408804, -10.33037), Vec2(1.127565, -10.47505), Vec2(1.693516, -10.60654), Vec2(2.303682, -10.72716), Vec2(2.923013, -10.83923), Vec2(3.516459, -10.94506), Vec2(4.04897, -11.04699), Vec2(4.485496, -11.14732), Vec2(4.790986, -11.24838), Vec2(4.92656, -11.35249), Vec2(4.387823, -11.46197), Vec2(3.16274, -11.57914), Vec2(1.714368, -11.70632), Vec2(0.5057687, -11.84584) };
		return pattern;
	}
	if (name == "SAR")
	{
		std::vector<Vec2> pattern{ Vec2(0,-3.25), Vec2(0, -6.5), Vec2(0, -9.75) };
		return pattern;
	}
	if (name == "SMG")
	{
		std::vector<Vec2> pattern{ Vec2(0.6512542, -1.305408), Vec2(0.9681615, -2.599905), Vec2(0.9872047, -3.859258), Vec2(0.6951124, -5.05923), Vec2(0.2062594, -6.175588), Vec2(-0.3338249, -7.184096), Vec2(-0.7796098, -8.060521), Vec2(-0.9855663, -8.812342), Vec2(-0.8372459, -9.496586), Vec2(-0.4148501, -10.11968), Vec2(0.1267298, -10.68622), Vec2(0.6324611, -11.20081), Vec2(0.9473124, -11.66807), Vec2(0.9353167, -12.09258), Vec2(0.6385964, -12.47896), Vec2(0.1786009, -12.83181), Vec2(-0.3247314, -13.15574), Vec2(-0.7514643, -13.45534), Vec2(-0.9816588, -13.73522), Vec2(-0.9354943, -13.99999), Vec2(-0.714118, -14.25425), Vec2(-0.4193012, -14.5026), Vec2(-0.1487077, -14.74965) };
		return pattern;
	}
	if (name == "MP5")
	{
		std::vector<Vec2> pattern{ Vec2(0, -0.8688382), Vec2(0, -2.042219), Vec2(-2.992364e-14, -3.370441), Vec2(-0.5103882, -4.703804), Vec2(-1.687297, -5.892606), Vec2(-2.999344, -6.787148), Vec2(-3.915147, -7.311441), Vec2(-3.948318, -7.742482), Vec2(-3.224567, -8.127406), Vec2(-2.228431, -8.468721), Vec2(-1.438722, -8.768936), Vec2(-1.288914, -9.03056), Vec2(-1.598686, -9.2561), Vec2(-2.154637, -9.448063), Vec2(-2.826861, -9.60896), Vec2(-3.485454, -9.741299), Vec2(-4.000507, -9.847586), Vec2(-4.242117, -9.930332), Vec2(-4.184897, -9.992043), Vec2(-3.969568, -10.03523), Vec2(-3.629241, -10.0624), Vec2(-3.194572, -10.07606), Vec2(-2.696223, -10.07872), Vec2(-2.16485, -10.07288), Vec2(-1.631112, -10.06106), Vec2(-1.125667, -10.04577), Vec2(-0.6791761, -10.02951), Vec2(-0.3222946, -10.01479), Vec2(-0.08568263, -10.00412) };
		return pattern;
	}
	if (name == "TOMMY")
	{
		std::vector<Vec2> pattern{ Vec2(0.7399524, -1.565956), Vec2(1.011324, -3.109221), Vec2(0.8437103, -4.587918), Vec2(0.3127854, -5.960169), Vec2(-0.3338249, -7.184096), Vec2(-0.8446444, -8.217823), Vec2(-0.9689822, -9.093672), Vec2(-0.6067921, -9.877484), Vec2(0.01632042, -10.57721), Vec2(0.6324611, -11.20081), Vec2(0.9737339, -11.75624), Vec2(0.8438975, -12.25145), Vec2(0.3745165, -12.6944), Vec2(-0.2263549, -13.09305), Vec2(-0.7514643, -13.45534), Vec2(-0.9935587, -13.78924), Vec2(-0.862007, -14.1027), Vec2(-0.5397906, -14.40368), Vec2(-0.1962007, -14.70013) };
		return pattern;
	}
	if (name == "M92")
	{
		std::vector<Vec2> pattern{ Vec2(0, -3.75), Vec2(0, -7.5), Vec2(0, -11.25) };
		return pattern;
	}
	if (name == "M39")
	{
		std::vector<Vec2> pattern{ Vec2(0.0, -3.5) , Vec2(0.0, -7.0), Vec2(0.0, -10.5) };
		return pattern;
	}
	if (name == "M249")
	{
		std::vector<Vec2> pattern{ Vec2(0.0, -2.75), Vec2(0.0, -5.5), Vec2(0.0, -8.25), Vec2(0.0, -11.0), Vec2(0.0, -13.75), Vec2(0.0, -16.5), Vec2(0.0, -19.25), Vec2(0.0, -22.0), Vec2(0.0, -24.75), Vec2(0.0, -27.5), Vec2(0.0, -30.25), Vec2(0.0, -33.0), Vec2(0.0, -35.75), Vec2(0.0, -38.5), Vec2(0.0, -41.25), Vec2(0.0, -44.0), Vec2(0.0, -46.75), Vec2(0.0, -49.5), Vec2(0.0, -52.25), Vec2(0.0, -55.0), Vec2(0.0, -57.75), Vec2(0.0, -60.5), Vec2(0.0, -63.25), Vec2(0.0, -66.0), Vec2(0.0, -68.75), Vec2(0.0, -71.5), Vec2(0.0, -74.25), Vec2(0.0, -77.0), Vec2(0.0, -79.75), Vec2(0.0, -82.5), Vec2(0.0, -85.25), Vec2(0.0, -88.0), Vec2(0.0, -90.75), Vec2(0.0, -93.5), Vec2(0.0, -96.25), Vec2(0.0, -99.0), Vec2(0.0, -101.75), Vec2(0.0, -104.5), Vec2(0.0, -107.25), Vec2(0.0, -110.0), Vec2(0.0, -112.75), Vec2(0.0, -115.5), Vec2(0.0, -118.25), Vec2(0.0, -121.0), Vec2(0.0, -123.75), Vec2(0.0, -126.5), Vec2(0.0, -129.25), Vec2(0.0, -132.0), Vec2(0.0, -134.75), Vec2(0.0, -137.5), Vec2(0.0, -140.25), Vec2(0.0, -143.0), Vec2(0.0, -145.75), Vec2(0.0, -148.5), Vec2(0.0, -151.25), Vec2(0.0, -154.0), Vec2(0.0, -156.75), Vec2(0.0, -159.5), Vec2(0.0, -162.25), Vec2(0.0, -165.0), Vec2(0.0, -167.75), Vec2(0.0, -170.5), Vec2(0.0, -173.25), Vec2(0.0, -176.0), Vec2(0.0, -178.75), Vec2(0.0, -181.5), Vec2(0.0, -184.25), Vec2(0.0, -187.0), Vec2(0.0, -189.75), Vec2(0.0, -192.5), Vec2(0.0, -195.25), Vec2(0.0, -198.0), Vec2(0.0, -200.75), Vec2(0.0, -203.5), Vec2(0.0, -206.25), Vec2(0.0, -209.0), Vec2(0.0, -211.75), Vec2(0.0, -214.5), Vec2(0.0, -217.25), Vec2(0.0, -220.0), Vec2(0.0, -222.75), Vec2(0.0, -225.5), Vec2(0.0, -228.25), Vec2(0.0, -231.0), Vec2(0.0, -233.75), Vec2(0.0, -236.5), Vec2(0.0, -239.25), Vec2(0.0, -242.0), Vec2(0.0, -244.75), Vec2(0.0, -247.5), Vec2(0.0, -250.25), Vec2(0.0, -253.0), Vec2(0.0, -255.75), Vec2(0.0, -258.5), Vec2(0.0, -261.25), Vec2(0.0, -264.0), Vec2(0.0, -266.75), Vec2(0.0, -269.5), Vec2(0.0, -272.25), Vec2(0.0, -275.0), Vec2(0.0, -277.75) };
		return pattern;
	}
	else
	{
		std::vector<Vec2> pattern;
		return pattern;
	}
}